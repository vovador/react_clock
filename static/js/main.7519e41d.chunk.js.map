{"version":3,"sources":["Clock/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","timer","setState","k","setInterval","this","prevProps","prevState","props","name","console","log","toLocaleTimeString","clearInterval","React","Component","defaultProps","App","isClockVisible","className","clockName","type","onClick","Math","random","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EA6BEC,MAAQ,WACN,EAAKC,SAAS,CACZH,KAAM,IAAIC,QA/BhB,kEAMI,IAAMG,EAAIC,YAAYC,KAAKJ,MAAO,KAElCI,KAAKH,SAAS,CAAED,MAAOE,MAR3B,yCAWqBG,EAAWC,GACxBF,KAAKG,MAAMC,OAASH,EAAUG,MAEhCC,QAAQC,IAAR,qCACgCL,EAAUG,KAD1C,eACqDJ,KAAKG,MAAMC,OAI9DJ,KAAKP,MAAMC,OAASQ,EAAUR,MAEhCW,QAAQC,IAAIN,KAAKP,MAAMC,KAAKa,wBArBlC,6CA0BIC,cAAcR,KAAKP,MAAMG,SA1B7B,+BAoCI,OACE,6BACGI,KAAKP,MAAMC,KAAKa,0BAtCzB,GAA2BE,IAAMC,YAgDjClB,EAAMmB,aAAe,CACnBP,KAAM,K,ICPOQ,E,4MAvCbnB,MAAQ,CACNoB,gBAAgB,G,uDAGR,IAAD,OACP,OACE,yBAAKC,UAAU,OACb,2CACA,yBAAKA,UAAU,SAAf,gBAEG,IACAd,KAAKP,MAAMoB,gBACV,kBAAC,EAAD,CAAOT,KAAMJ,KAAKP,MAAMsB,aAI5B,4BACEC,KAAK,SACLC,QAAS,kBAAM,EAAKpB,SAAS,CAAEgB,gBAAgB,MAFjD,cAMA,4BACEG,KAAK,SACLC,QAAS,kBAAM,EAAKpB,SAAS,CAAEgB,gBAAgB,MAFjD,cAMA,4BACEG,KAAK,SACLC,QAAS,kBAAM,EAAKpB,SAAS,CAAEkB,UAAWG,KAAKC,aAFjD,wB,GA7BUV,IAAMC,WCDxBU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.7519e41d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    const k = setInterval(this.timer, 1000);\n\n    this.setState({ timer: k });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.name !== prevProps.name) {\n      /* eslint-disable-next-line no-console */\n      console.log(\n        `The Clock was renamed from ${prevProps.name} to ${this.props.name}`,\n      );\n    }\n\n    if (this.state.date !== prevState.date) {\n      /* eslint-disable-next-line no-console */\n      console.log(this.state.date.toLocaleTimeString());\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timer);\n  }\n\n  timer = () => {\n    this.setState({\n      date: new Date(),\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.date.toLocaleTimeString()}\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number,\n};\n\nClock.defaultProps = {\n  name: 123,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Clock } from './Clock/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div className=\"timer\">\n          Current time:\n          {' '}\n          {this.state.isClockVisible && (\n            <Clock name={this.state.clockName} />\n          )\n          }\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: true })}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: false })}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ clockName: Math.random() })}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}